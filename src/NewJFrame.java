
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Point;
import java.util.HashMap;
import java.util.HashSet;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ADMIN
 */
public class NewJFrame extends javax.swing.JFrame {

    Image img;
    Graphics2D gfx;
    int xc = 20, yc = 50;
    int nodeSize = 50;
    int id = 0;
    int select = -1;
    HashMap<Integer,Point> location;
    HashMap<Integer,HashSet> nodes;
    public NewJFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
        location = new HashMap<>();
        nodes = new HashMap<>();
        img = panel.createImage(panel.getWidth(), panel.getHeight());
        gfx = (Graphics2D) img.getGraphics();
    }

    public void draw()
    {
        for (int i = 0; i < location.size(); i++) 
        {
            Point p = (Point) location.values().toArray()[i];
            gfx.setColor(Color.red);
            gfx.drawOval(p.x-(nodeSize/2), p.y-(nodeSize/2), nodeSize, nodeSize);
            gfx.setColor(Color.blue);
            gfx.drawString(" "+i,p.x-4,p.y+20);
        }
        for (int i = 0; i < nodes.size(); i++) 
        {
            Point Psource = (Point) location.values().toArray()[i];
            for(Integer dest : (HashSet<Integer>) nodes.values().toArray()[i])
            {
                Point Pdest = (Point) location.get(dest);
                gfx.setStroke(new BasicStroke(3));
                gfx.setColor(Color.black);
                gfx.drawLine(Psource.x, Psource.y, Pdest.x, Pdest.y);
            }
        }
        panel.getGraphics().drawImage(img, 0, 0, this);
        System.out.println(location);
        System.out.println(nodes);
    }
    
    private int selectNode(int xCoord, int yCoord)
    {
        for (int i = 0; i < location.size(); i++) 
        {
            Point thePoint = (Point) location.values().toArray()[i];
            int deltaX = xCoord - (thePoint.x - nodeSize/2);
            int deltaY = yCoord - (thePoint.y - nodeSize/2);
            
            if(Math.sqrt(deltaX * deltaX + deltaY *deltaY) <= nodeSize + 6)
            {
                return (int) location.keySet().toArray()[i];
            }
        }
        return -1;
    }
    
    
    @Override
    public void paint(Graphics g)
    {
        super.paint(g);
        draw();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                panelMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 517, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 334, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void panelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelMousePressed
        select = selectNode(evt.getX(), evt.getY());
        if(select == -1)
        {
            location.put(id, new Point(evt.getX(),evt.getY()));
            nodes.put(id, new HashSet());
            id++;
            draw(); 
        }
    }//GEN-LAST:event_panelMousePressed

    private void panelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelMouseReleased
        int destination = selectNode(evt.getX(),evt.getY());
        if(destination != select && destination >= -1 && select > -1)
        {
            nodes.get(destination).add(select);
            nodes.get(select).add(destination);
        }
        draw();
    }//GEN-LAST:event_panelMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel panel;
    // End of variables declaration//GEN-END:variables
}
